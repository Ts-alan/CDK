namespace CDK.DataAccess.Repositories.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class UpdateDDFScheme : DbMigration
    {
        public override void Up()
        {
            DropForeignKey("ddf.AgentALanguage", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.AgentIndividualDesignation", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.AgentSpecialty", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.UnitAgentContact", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.UnitAgentDesignation", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.UnitAgentLanguage", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.UnitAgentOffice", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.UnitAgentPhone", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.UnitAgentSpeciality", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.UnitAgentTradingArea", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.UnitAgentWebsite", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.UnitUnitAgent", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.AgentABoard", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.OfficeFranchisor", "UnitAgentOfficeId", "ddf.UnitAgentOffice");
            DropForeignKey("ddf.OfficeOrganizationDesignation", "UnitAgentOfficeId", "ddf.UnitAgentOffice");
            DropForeignKey("ddf.OfficeOrganizationType", "UnitAgentOfficeId", "ddf.UnitAgentOffice");
            DropForeignKey("ddf.UnitAgentOfficePhone", "UnitAgentOfficeId", "ddf.UnitAgentOffice");
            DropForeignKey("ddf.UnitAgentOfficeWebsite", "UnitAgentOfficeId", "ddf.UnitAgentOffice");
            DropForeignKey("ddf.UnitAmenitiesNearby", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitAppliance", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.Business", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.BusinessBusinessSubType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.BusinessBusinessType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitCoolingType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitFeature", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitFlooringType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitLiveStockType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitLoadingType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitMaintenanceFeeType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitPaymentUnit", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitRentalEquipmentType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitRightType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitStorageType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitTransactionType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitOpenHouse", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitParkingSpace", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitPhoto", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitRoom", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitUtilitiesAvailable", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitViewType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitUnitAgent", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.LandAccessType", "BuildingId", "ddf.BuildingLand");
            DropForeignKey("ddf.LandCurrentUse", "BuildingId", "ddf.BuildingLand");
            DropForeignKey("ddf.LandFenceType", "BuildingId", "ddf.BuildingLand");
            DropForeignKey("ddf.LandLandDispositionType", "BuildingId", "ddf.BuildingLand");
            DropForeignKey("ddf.LandLandscapeFeature", "BuildingId", "ddf.BuildingLand");
            DropForeignKey("ddf.LandSewer", "BuildingId", "ddf.BuildingLand");
            DropForeignKey("ddf.LandSoilType", "BuildingId", "ddf.BuildingLand");
            DropForeignKey("ddf.LandSurfaceWater", "BuildingId", "ddf.BuildingLand");
            DropForeignKey("ddf.LandTopographyType", "BuildingId", "ddf.BuildingLand");
            DropForeignKey("ddf.LandAmenitiesNearby", "BuildingId", "ddf.BuildingLand");
            DropForeignKey("ddf.BuildingAmenitie", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingAmperage", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingArchitecturalStyle", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingBasementDevelopment", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingBasementFeature", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingBasementType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingBoard", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingBuildingType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingCeilingType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingClearCeilingHeight", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingCommunicationType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingCommunityFeature", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingConstructionMaterial", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingCrop", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingDocumentType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingEasement", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingEquipmentType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingExteriorFinish", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingFarmType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingFireplaceFuel", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingFireplaceType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingFireProtection", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingFixture", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingFoundationType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingHeatingFuel", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingHeatingType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingIrrigationType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingMachinery", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingMeasureUnit", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingPoolFeature", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingPoolType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingRoadType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingRoofMaterial", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingRoofStyle", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingSignType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingStoreFront", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingStructureType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingUffiCode", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingUtilityPower", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingUtilityWater", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingLand", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.Unit", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.Building", "BuildingAddressId", "ddf.BuildingAddress");
            DropIndex("ddf.BuildingLand", new[] { "BuildingId" });
            DropIndex("ddf.Business", new[] { "UnitId" });
            DropPrimaryKey("ddf.UnitAgent");
            DropPrimaryKey("ddf.UnitAgentContact");
            DropPrimaryKey("ddf.UnitAgentDesignation");
            DropPrimaryKey("ddf.UnitAgentLanguage");
            DropPrimaryKey("ddf.UnitAgentOffice");
            DropPrimaryKey("ddf.UnitAgentOfficePhone");
            DropPrimaryKey("ddf.UnitAgentOfficeWebsite");
            DropPrimaryKey("ddf.UnitAgentPhone");
            DropPrimaryKey("ddf.UnitAgentSpeciality");
            DropPrimaryKey("ddf.UnitAgentTradingArea");
            DropPrimaryKey("ddf.UnitAgentWebsite");
            DropPrimaryKey("ddf.Unit");
            DropPrimaryKey("ddf.BuildingLand");
            DropPrimaryKey("ddf.Building");
            DropPrimaryKey("ddf.BuildingAddress");
            DropPrimaryKey("ddf.Business");
            DropPrimaryKey("ddf.UnitOpenHouse");
            DropPrimaryKey("ddf.UnitParkingSpace");
            DropPrimaryKey("ddf.UnitPhoto");

            DropColumn("ddf.UnitAgent", "UnitAgentId");
            DropColumn("ddf.UnitAgent", "LogoUri");
            DropColumn("ddf.UnitAgentContact", "UnitAgentContactId");
            DropColumn("ddf.UnitAgentDesignation", "UnitAgentDesignationId");
            DropColumn("ddf.UnitAgentLanguage", "UnitAgentLanguageId");
            DropColumn("ddf.UnitAgentOffice", "UnitAgentOfficeId");
            DropColumn("ddf.UnitAgentOfficePhone", "UnitAgentOfficePhoneId");
            DropColumn("ddf.UnitAgentOfficeWebsite", "UnitAgentOfficeWebsiteId");
            DropColumn("ddf.UnitAgentPhone", "UnitAgentPhoneId");
            DropColumn("ddf.UnitAgentSpeciality", "UnitAgentSpecialityId");
            DropColumn("ddf.UnitAgentTradingArea", "UnitAgentTradingAreaId");
            DropColumn("ddf.UnitAgentWebsite", "UnitAgentWebsiteId");
            DropColumn("ddf.Unit", "UnitId");
            DropColumn("ddf.Building", "BuildingId");
            DropColumn("ddf.BuildingAddress", "BuildingAddressId");
            DropColumn("ddf.UnitOpenHouse", "UnitOpenHouseId");
            DropColumn("ddf.UnitParkingSpace", "UnitParkingSpaceId");
            DropColumn("ddf.UnitPhoto", "UnitPhotoId");

            CreateTable(
                "ddf.AuditDdfRequest",
                c => new
                    {
                        RequestId = c.Long(nullable: false, identity: true),
                        Status = c.String(maxLength: 255, unicode: false),
                        Xml = c.String(maxLength: 8000, unicode: false),
                        DdfLastUpdate = c.DateTime(),
                    })
                .PrimaryKey(t => t.RequestId);
            
            CreateTable(
                "ddf.PropertyType",
                c => new
                    {
                        Id = c.Long(nullable: false),
                        Value = c.String(maxLength: 255, unicode: false),
                        ShortName = c.String(maxLength: 255, unicode: false),
                        Name = c.String(maxLength: 255, unicode: false),
                        AlternateName = c.String(maxLength: 255, unicode: false),
                        ImgUrl = c.String(maxLength: 255, unicode: false),
                    })
                .PrimaryKey(t => t.Id);
            
            AddColumn("ddf.UnitAgent", "Id", c => c.Long(nullable: false));
            AddColumn("ddf.UnitAgent", "ThumbnailPhotoUri", c => c.String(maxLength: 255, unicode: false));
            AddColumn("ddf.UnitAgent", "LargePhotoUri", c => c.String(maxLength: 255, unicode: false));
            AddColumn("ddf.UnitAgentContact", "Id", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitAgentDesignation", "Id", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitAgentLanguage", "Id", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitAgentOffice", "Id", c => c.Long(nullable: false));
            AddColumn("ddf.UnitAgentOfficePhone", "Id", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitAgentOfficeWebsite", "Id", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitAgentPhone", "Id", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitAgentSpeciality", "Id", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitAgentTradingArea", "Id", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitAgentWebsite", "Id", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.Unit", "Id", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.Unit", "ListingId", c => c.String(maxLength: 255, unicode: false));
            AddColumn("ddf.Unit", "SeoCaption", c => c.String(maxLength: 255, unicode: false));
            AddColumn("ddf.Unit", "SeoDescription", c => c.String(maxLength: 8000, unicode: false));
            AddColumn("ddf.Unit", "SeoKeywords", c => c.String(maxLength: 255, unicode: false));
            AddColumn("ddf.Unit", "SeoSlug", c => c.String(maxLength: 8000, unicode: false));
            AddColumn("ddf.BuildingLand", "Id", c => c.Long(nullable: false));
            AddColumn("ddf.Building", "Id", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.Building", "SeoCaption", c => c.String(maxLength: 255, unicode: false));
            AddColumn("ddf.Building", "SeoDescription", c => c.String(maxLength: 8000, unicode: false));
            AddColumn("ddf.Building", "SeoKeywords", c => c.String(maxLength: 255, unicode: false));
            AddColumn("ddf.Building", "SeoSlug", c => c.String(maxLength: 8000, unicode: false));
            AddColumn("ddf.BuildingAddress", "Id", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.BuildingAddress", "FullAddress", c => c.String(maxLength: 255, unicode: false));
            AddColumn("ddf.Business", "Id", c => c.Long(nullable: false));
            AddColumn("ddf.UnitOpenHouse", "Id", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitParkingSpace", "Id", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitPhoto", "Id", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitPhoto", "SeoAltText", c => c.String(maxLength: 255, unicode: false));
            AddColumn("ddf.UnitPhoto", "SeoCaption", c => c.String(maxLength: 255, unicode: false));
            AddColumn("ddf.UnitPhoto", "SeoDescription", c => c.String(maxLength: 8000, unicode: false));
            AddColumn("ddf.UnitPhoto", "SeoKeywords", c => c.String(maxLength: 255, unicode: false));
            AddColumn("ddf.UnitPhoto", "SeoSlug", c => c.String(maxLength: 8000, unicode: false));
            AlterColumn("ddf.Unit", "PublicRemarks", c => c.String(maxLength: 8000, unicode: false));
            AlterColumn("ddf.BuildingLand", "BuildingId", c => c.Long());
            AlterColumn("ddf.Business", "UnitId", c => c.Long());
            AddPrimaryKey("ddf.UnitAgent", "Id");
            AddPrimaryKey("ddf.UnitAgentContact", "Id");
            AddPrimaryKey("ddf.UnitAgentDesignation", "Id");
            AddPrimaryKey("ddf.UnitAgentLanguage", "Id");
            AddPrimaryKey("ddf.UnitAgentOffice", "Id");
            AddPrimaryKey("ddf.UnitAgentOfficePhone", "Id");
            AddPrimaryKey("ddf.UnitAgentOfficeWebsite", "Id");
            AddPrimaryKey("ddf.UnitAgentPhone", "Id");
            AddPrimaryKey("ddf.UnitAgentSpeciality", "Id");
            AddPrimaryKey("ddf.UnitAgentTradingArea", "Id");
            AddPrimaryKey("ddf.UnitAgentWebsite", "Id");
            AddPrimaryKey("ddf.Unit", "Id");
            AddPrimaryKey("ddf.BuildingLand", "Id");
            AddPrimaryKey("ddf.Building", "Id");
            AddPrimaryKey("ddf.BuildingAddress", "Id");
            AddPrimaryKey("ddf.Business", "Id");
            AddPrimaryKey("ddf.UnitOpenHouse", "Id");
            AddPrimaryKey("ddf.UnitParkingSpace", "Id");
            AddPrimaryKey("ddf.UnitPhoto", "Id");
            CreateIndex("ddf.BuildingLand", "BuildingId");
            CreateIndex("ddf.Business", "UnitId");
            AddForeignKey("ddf.AgentALanguage", "UnitAgentId", "ddf.UnitAgent", "Id", cascadeDelete: true);
            AddForeignKey("ddf.AgentIndividualDesignation", "UnitAgentId", "ddf.UnitAgent", "Id", cascadeDelete: true);
            AddForeignKey("ddf.AgentSpecialty", "UnitAgentId", "ddf.UnitAgent", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitAgentContact", "UnitAgentId", "ddf.UnitAgent", "Id");
            AddForeignKey("ddf.UnitAgentDesignation", "UnitAgentId", "ddf.UnitAgent", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitAgentLanguage", "UnitAgentId", "ddf.UnitAgent", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitAgentOffice", "UnitAgentId", "ddf.UnitAgent", "Id");
            AddForeignKey("ddf.UnitAgentPhone", "UnitAgentId", "ddf.UnitAgent", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitAgentSpeciality", "UnitAgentId", "ddf.UnitAgent", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitAgentTradingArea", "UnitAgentId", "ddf.UnitAgent", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitAgentWebsite", "UnitAgentId", "ddf.UnitAgent", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitUnitAgent", "UnitAgentId", "ddf.UnitAgent", "Id", cascadeDelete: true);
            AddForeignKey("ddf.AgentABoard", "UnitAgentId", "ddf.UnitAgent", "Id", cascadeDelete: true);
            AddForeignKey("ddf.OfficeFranchisor", "UnitAgentOfficeId", "ddf.UnitAgentOffice", "Id", cascadeDelete: true);
            AddForeignKey("ddf.OfficeOrganizationDesignation", "UnitAgentOfficeId", "ddf.UnitAgentOffice", "Id", cascadeDelete: true);
            AddForeignKey("ddf.OfficeOrganizationType", "UnitAgentOfficeId", "ddf.UnitAgentOffice", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitAgentOfficePhone", "UnitAgentOfficeId", "ddf.UnitAgentOffice", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitAgentOfficeWebsite", "UnitAgentOfficeId", "ddf.UnitAgentOffice", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitAmenitiesNearby", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitAppliance", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.Business", "UnitId", "ddf.Unit", "Id");
            AddForeignKey("ddf.BusinessBusinessSubType", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BusinessBusinessType", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitCoolingType", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitFeature", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitFlooringType", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitLiveStockType", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitLoadingType", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitMaintenanceFeeType", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitPaymentUnit", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitRentalEquipmentType", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitRightType", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitStorageType", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitTransactionType", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitOpenHouse", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitParkingSpace", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitPhoto", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitRoom", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitUtilitiesAvailable", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitViewType", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.UnitUnitAgent", "UnitId", "ddf.Unit", "Id", cascadeDelete: true);
            AddForeignKey("ddf.LandAccessType", "BuildingId", "ddf.BuildingLand", "Id", cascadeDelete: true);
            AddForeignKey("ddf.LandCurrentUse", "BuildingId", "ddf.BuildingLand", "Id", cascadeDelete: true);
            AddForeignKey("ddf.LandFenceType", "BuildingId", "ddf.BuildingLand", "Id", cascadeDelete: true);
            AddForeignKey("ddf.LandLandDispositionType", "BuildingId", "ddf.BuildingLand", "Id", cascadeDelete: true);
            AddForeignKey("ddf.LandLandscapeFeature", "BuildingId", "ddf.BuildingLand", "Id", cascadeDelete: true);
            AddForeignKey("ddf.LandSewer", "BuildingId", "ddf.BuildingLand", "Id", cascadeDelete: true);
            AddForeignKey("ddf.LandSoilType", "BuildingId", "ddf.BuildingLand", "Id", cascadeDelete: true);
            AddForeignKey("ddf.LandSurfaceWater", "BuildingId", "ddf.BuildingLand", "Id", cascadeDelete: true);
            AddForeignKey("ddf.LandTopographyType", "BuildingId", "ddf.BuildingLand", "Id", cascadeDelete: true);
            AddForeignKey("ddf.LandAmenitiesNearby", "BuildingId", "ddf.BuildingLand", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingAmenitie", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingAmperage", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingArchitecturalStyle", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingBasementDevelopment", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingBasementFeature", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingBasementType", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingBoard", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingBuildingType", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingCeilingType", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingClearCeilingHeight", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingCommunicationType", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingCommunityFeature", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingConstructionMaterial", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingCrop", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingDocumentType", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingEasement", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingEquipmentType", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingExteriorFinish", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingFarmType", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingFireplaceFuel", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingFireplaceType", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingFireProtection", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingFixture", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingFoundationType", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingHeatingFuel", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingHeatingType", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingIrrigationType", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingMachinery", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingMeasureUnit", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingPoolFeature", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingPoolType", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingRoadType", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingRoofMaterial", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingRoofStyle", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingSignType", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingStoreFront", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingStructureType", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingUffiCode", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingUtilityPower", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingUtilityWater", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.BuildingLand", "BuildingId", "ddf.Building", "Id");
            AddForeignKey("ddf.Unit", "BuildingId", "ddf.Building", "Id", cascadeDelete: true);
            AddForeignKey("ddf.Building", "BuildingAddressId", "ddf.BuildingAddress", "Id");
        }
        
        public override void Down()
        {
            AddColumn("ddf.UnitPhoto", "UnitPhotoId", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitParkingSpace", "UnitParkingSpaceId", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitOpenHouse", "UnitOpenHouseId", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.BuildingAddress", "BuildingAddressId", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.Building", "BuildingId", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.Unit", "UnitId", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitAgentWebsite", "UnitAgentWebsiteId", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitAgentTradingArea", "UnitAgentTradingAreaId", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitAgentSpeciality", "UnitAgentSpecialityId", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitAgentPhone", "UnitAgentPhoneId", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitAgentOfficeWebsite", "UnitAgentOfficeWebsiteId", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitAgentOfficePhone", "UnitAgentOfficePhoneId", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitAgentOffice", "UnitAgentOfficeId", c => c.Long(nullable: false));
            AddColumn("ddf.UnitAgentLanguage", "UnitAgentLanguageId", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitAgentDesignation", "UnitAgentDesignationId", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitAgentContact", "UnitAgentContactId", c => c.Long(nullable: false, identity: true));
            AddColumn("ddf.UnitAgent", "LogoUri", c => c.String(maxLength: 255, unicode: false));
            AddColumn("ddf.UnitAgent", "UnitAgentId", c => c.Long(nullable: false));
            DropForeignKey("ddf.Building", "BuildingAddressId", "ddf.BuildingAddress");
            DropForeignKey("ddf.Unit", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingLand", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingUtilityWater", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingUtilityPower", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingUffiCode", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingStructureType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingStoreFront", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingSignType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingRoofStyle", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingRoofMaterial", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingRoadType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingPoolType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingPoolFeature", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingMeasureUnit", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingMachinery", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingIrrigationType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingHeatingType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingHeatingFuel", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingFoundationType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingFixture", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingFireProtection", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingFireplaceType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingFireplaceFuel", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingFarmType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingExteriorFinish", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingEquipmentType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingEasement", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingDocumentType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingCrop", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingConstructionMaterial", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingCommunityFeature", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingCommunicationType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingClearCeilingHeight", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingCeilingType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingBuildingType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingBoard", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingBasementType", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingBasementFeature", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingBasementDevelopment", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingArchitecturalStyle", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingAmperage", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.BuildingAmenitie", "BuildingId", "ddf.Building");
            DropForeignKey("ddf.LandAmenitiesNearby", "BuildingId", "ddf.BuildingLand");
            DropForeignKey("ddf.LandTopographyType", "BuildingId", "ddf.BuildingLand");
            DropForeignKey("ddf.LandSurfaceWater", "BuildingId", "ddf.BuildingLand");
            DropForeignKey("ddf.LandSoilType", "BuildingId", "ddf.BuildingLand");
            DropForeignKey("ddf.LandSewer", "BuildingId", "ddf.BuildingLand");
            DropForeignKey("ddf.LandLandscapeFeature", "BuildingId", "ddf.BuildingLand");
            DropForeignKey("ddf.LandLandDispositionType", "BuildingId", "ddf.BuildingLand");
            DropForeignKey("ddf.LandFenceType", "BuildingId", "ddf.BuildingLand");
            DropForeignKey("ddf.LandCurrentUse", "BuildingId", "ddf.BuildingLand");
            DropForeignKey("ddf.LandAccessType", "BuildingId", "ddf.BuildingLand");
            DropForeignKey("ddf.UnitUnitAgent", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitViewType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitUtilitiesAvailable", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitRoom", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitPhoto", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitParkingSpace", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitOpenHouse", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitTransactionType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitStorageType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitRightType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitRentalEquipmentType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitPaymentUnit", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitMaintenanceFeeType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitLoadingType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitLiveStockType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitFlooringType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitFeature", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitCoolingType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.BusinessBusinessType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.BusinessBusinessSubType", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.Business", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitAppliance", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitAmenitiesNearby", "UnitId", "ddf.Unit");
            DropForeignKey("ddf.UnitAgentOfficeWebsite", "UnitAgentOfficeId", "ddf.UnitAgentOffice");
            DropForeignKey("ddf.UnitAgentOfficePhone", "UnitAgentOfficeId", "ddf.UnitAgentOffice");
            DropForeignKey("ddf.OfficeOrganizationType", "UnitAgentOfficeId", "ddf.UnitAgentOffice");
            DropForeignKey("ddf.OfficeOrganizationDesignation", "UnitAgentOfficeId", "ddf.UnitAgentOffice");
            DropForeignKey("ddf.OfficeFranchisor", "UnitAgentOfficeId", "ddf.UnitAgentOffice");
            DropForeignKey("ddf.AgentABoard", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.UnitUnitAgent", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.UnitAgentWebsite", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.UnitAgentTradingArea", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.UnitAgentSpeciality", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.UnitAgentPhone", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.UnitAgentOffice", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.UnitAgentLanguage", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.UnitAgentDesignation", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.UnitAgentContact", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.AgentSpecialty", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.AgentIndividualDesignation", "UnitAgentId", "ddf.UnitAgent");
            DropForeignKey("ddf.AgentALanguage", "UnitAgentId", "ddf.UnitAgent");
            DropIndex("ddf.Business", new[] { "UnitId" });
            DropIndex("ddf.BuildingLand", new[] { "BuildingId" });
            DropPrimaryKey("ddf.UnitPhoto");
            DropPrimaryKey("ddf.UnitParkingSpace");
            DropPrimaryKey("ddf.UnitOpenHouse");
            DropPrimaryKey("ddf.Business");
            DropPrimaryKey("ddf.BuildingAddress");
            DropPrimaryKey("ddf.Building");
            DropPrimaryKey("ddf.BuildingLand");
            DropPrimaryKey("ddf.Unit");
            DropPrimaryKey("ddf.UnitAgentWebsite");
            DropPrimaryKey("ddf.UnitAgentTradingArea");
            DropPrimaryKey("ddf.UnitAgentSpeciality");
            DropPrimaryKey("ddf.UnitAgentPhone");
            DropPrimaryKey("ddf.UnitAgentOfficeWebsite");
            DropPrimaryKey("ddf.UnitAgentOfficePhone");
            DropPrimaryKey("ddf.UnitAgentOffice");
            DropPrimaryKey("ddf.UnitAgentLanguage");
            DropPrimaryKey("ddf.UnitAgentDesignation");
            DropPrimaryKey("ddf.UnitAgentContact");
            DropPrimaryKey("ddf.UnitAgent");
            AlterColumn("ddf.Business", "UnitId", c => c.Long(nullable: false));
            AlterColumn("ddf.BuildingLand", "BuildingId", c => c.Long(nullable: false));
            AlterColumn("ddf.Unit", "PublicRemarks", c => c.String(unicode: false));
            DropColumn("ddf.UnitPhoto", "SeoSlug");
            DropColumn("ddf.UnitPhoto", "SeoKeywords");
            DropColumn("ddf.UnitPhoto", "SeoDescription");
            DropColumn("ddf.UnitPhoto", "SeoCaption");
            DropColumn("ddf.UnitPhoto", "SeoAltText");
            DropColumn("ddf.UnitPhoto", "Id");
            DropColumn("ddf.UnitParkingSpace", "Id");
            DropColumn("ddf.UnitOpenHouse", "Id");
            DropColumn("ddf.Business", "Id");
            DropColumn("ddf.BuildingAddress", "FullAddress");
            DropColumn("ddf.BuildingAddress", "Id");
            DropColumn("ddf.Building", "SeoSlug");
            DropColumn("ddf.Building", "SeoKeywords");
            DropColumn("ddf.Building", "SeoDescription");
            DropColumn("ddf.Building", "SeoCaption");
            DropColumn("ddf.Building", "Id");
            DropColumn("ddf.BuildingLand", "Id");
            DropColumn("ddf.Unit", "SeoSlug");
            DropColumn("ddf.Unit", "SeoKeywords");
            DropColumn("ddf.Unit", "SeoDescription");
            DropColumn("ddf.Unit", "SeoCaption");
            DropColumn("ddf.Unit", "ListingId");
            DropColumn("ddf.Unit", "Id");
            DropColumn("ddf.UnitAgentWebsite", "Id");
            DropColumn("ddf.UnitAgentTradingArea", "Id");
            DropColumn("ddf.UnitAgentSpeciality", "Id");
            DropColumn("ddf.UnitAgentPhone", "Id");
            DropColumn("ddf.UnitAgentOfficeWebsite", "Id");
            DropColumn("ddf.UnitAgentOfficePhone", "Id");
            DropColumn("ddf.UnitAgentOffice", "Id");
            DropColumn("ddf.UnitAgentLanguage", "Id");
            DropColumn("ddf.UnitAgentDesignation", "Id");
            DropColumn("ddf.UnitAgentContact", "Id");
            DropColumn("ddf.UnitAgent", "LargePhotoUri");
            DropColumn("ddf.UnitAgent", "ThumbnailPhotoUri");
            DropColumn("ddf.UnitAgent", "Id");
            DropTable("ddf.PropertyType");
            DropTable("ddf.AuditDdfRequest");
            AddPrimaryKey("ddf.UnitPhoto", "UnitPhotoId");
            AddPrimaryKey("ddf.UnitParkingSpace", "UnitParkingSpaceId");
            AddPrimaryKey("ddf.UnitOpenHouse", "UnitOpenHouseId");
            AddPrimaryKey("ddf.Business", "UnitId");
            AddPrimaryKey("ddf.BuildingAddress", "BuildingAddressId");
            AddPrimaryKey("ddf.Building", "BuildingId");
            AddPrimaryKey("ddf.BuildingLand", "BuildingId");
            AddPrimaryKey("ddf.Unit", "UnitId");
            AddPrimaryKey("ddf.UnitAgentWebsite", "UnitAgentWebsiteId");
            AddPrimaryKey("ddf.UnitAgentTradingArea", "UnitAgentTradingAreaId");
            AddPrimaryKey("ddf.UnitAgentSpeciality", "UnitAgentSpecialityId");
            AddPrimaryKey("ddf.UnitAgentPhone", "UnitAgentPhoneId");
            AddPrimaryKey("ddf.UnitAgentOfficeWebsite", "UnitAgentOfficeWebsiteId");
            AddPrimaryKey("ddf.UnitAgentOfficePhone", "UnitAgentOfficePhoneId");
            AddPrimaryKey("ddf.UnitAgentOffice", "UnitAgentOfficeId");
            AddPrimaryKey("ddf.UnitAgentLanguage", "UnitAgentLanguageId");
            AddPrimaryKey("ddf.UnitAgentDesignation", "UnitAgentDesignationId");
            AddPrimaryKey("ddf.UnitAgentContact", "UnitAgentContactId");
            AddPrimaryKey("ddf.UnitAgent", "UnitAgentId");
            CreateIndex("ddf.Business", "UnitId");
            CreateIndex("ddf.BuildingLand", "BuildingId");
            AddForeignKey("ddf.Building", "BuildingAddressId", "ddf.BuildingAddress", "BuildingAddressId");
            AddForeignKey("ddf.Unit", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingLand", "BuildingId", "ddf.Building", "BuildingId");
            AddForeignKey("ddf.BuildingUtilityWater", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingUtilityPower", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingUffiCode", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingStructureType", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingStoreFront", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingSignType", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingRoofStyle", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingRoofMaterial", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingRoadType", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingPoolType", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingPoolFeature", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingMeasureUnit", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingMachinery", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingIrrigationType", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingHeatingType", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingHeatingFuel", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingFoundationType", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingFixture", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingFireProtection", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingFireplaceType", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingFireplaceFuel", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingFarmType", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingExteriorFinish", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingEquipmentType", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingEasement", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingDocumentType", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingCrop", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingConstructionMaterial", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingCommunityFeature", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingCommunicationType", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingClearCeilingHeight", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingCeilingType", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingBuildingType", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingBoard", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingBasementType", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingBasementFeature", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingBasementDevelopment", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingArchitecturalStyle", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingAmperage", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.BuildingAmenitie", "BuildingId", "ddf.Building", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.LandAmenitiesNearby", "BuildingId", "ddf.BuildingLand", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.LandTopographyType", "BuildingId", "ddf.BuildingLand", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.LandSurfaceWater", "BuildingId", "ddf.BuildingLand", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.LandSoilType", "BuildingId", "ddf.BuildingLand", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.LandSewer", "BuildingId", "ddf.BuildingLand", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.LandLandscapeFeature", "BuildingId", "ddf.BuildingLand", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.LandLandDispositionType", "BuildingId", "ddf.BuildingLand", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.LandFenceType", "BuildingId", "ddf.BuildingLand", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.LandCurrentUse", "BuildingId", "ddf.BuildingLand", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.LandAccessType", "BuildingId", "ddf.BuildingLand", "BuildingId", cascadeDelete: true);
            AddForeignKey("ddf.UnitUnitAgent", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.UnitViewType", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.UnitUtilitiesAvailable", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.UnitRoom", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.UnitPhoto", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.UnitParkingSpace", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.UnitOpenHouse", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.UnitTransactionType", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.UnitStorageType", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.UnitRightType", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.UnitRentalEquipmentType", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.UnitPaymentUnit", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.UnitMaintenanceFeeType", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.UnitLoadingType", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.UnitLiveStockType", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.UnitFlooringType", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.UnitFeature", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.UnitCoolingType", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.BusinessBusinessType", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.BusinessBusinessSubType", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.Business", "UnitId", "ddf.Unit", "UnitId");
            AddForeignKey("ddf.UnitAppliance", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.UnitAmenitiesNearby", "UnitId", "ddf.Unit", "UnitId", cascadeDelete: true);
            AddForeignKey("ddf.UnitAgentOfficeWebsite", "UnitAgentOfficeId", "ddf.UnitAgentOffice", "UnitAgentOfficeId", cascadeDelete: true);
            AddForeignKey("ddf.UnitAgentOfficePhone", "UnitAgentOfficeId", "ddf.UnitAgentOffice", "UnitAgentOfficeId", cascadeDelete: true);
            AddForeignKey("ddf.OfficeOrganizationType", "UnitAgentOfficeId", "ddf.UnitAgentOffice", "UnitAgentOfficeId", cascadeDelete: true);
            AddForeignKey("ddf.OfficeOrganizationDesignation", "UnitAgentOfficeId", "ddf.UnitAgentOffice", "UnitAgentOfficeId", cascadeDelete: true);
            AddForeignKey("ddf.OfficeFranchisor", "UnitAgentOfficeId", "ddf.UnitAgentOffice", "UnitAgentOfficeId", cascadeDelete: true);
            AddForeignKey("ddf.AgentABoard", "UnitAgentId", "ddf.UnitAgent", "UnitAgentId", cascadeDelete: true);
            AddForeignKey("ddf.UnitUnitAgent", "UnitAgentId", "ddf.UnitAgent", "UnitAgentId", cascadeDelete: true);
            AddForeignKey("ddf.UnitAgentWebsite", "UnitAgentId", "ddf.UnitAgent", "UnitAgentId", cascadeDelete: true);
            AddForeignKey("ddf.UnitAgentTradingArea", "UnitAgentId", "ddf.UnitAgent", "UnitAgentId", cascadeDelete: true);
            AddForeignKey("ddf.UnitAgentSpeciality", "UnitAgentId", "ddf.UnitAgent", "UnitAgentId", cascadeDelete: true);
            AddForeignKey("ddf.UnitAgentPhone", "UnitAgentId", "ddf.UnitAgent", "UnitAgentId", cascadeDelete: true);
            AddForeignKey("ddf.UnitAgentOffice", "UnitAgentId", "ddf.UnitAgent", "UnitAgentId");
            AddForeignKey("ddf.UnitAgentLanguage", "UnitAgentId", "ddf.UnitAgent", "UnitAgentId", cascadeDelete: true);
            AddForeignKey("ddf.UnitAgentDesignation", "UnitAgentId", "ddf.UnitAgent", "UnitAgentId", cascadeDelete: true);
            AddForeignKey("ddf.UnitAgentContact", "UnitAgentId", "ddf.UnitAgent", "UnitAgentId");
            AddForeignKey("ddf.AgentSpecialty", "UnitAgentId", "ddf.UnitAgent", "UnitAgentId", cascadeDelete: true);
            AddForeignKey("ddf.AgentIndividualDesignation", "UnitAgentId", "ddf.UnitAgent", "UnitAgentId", cascadeDelete: true);
            AddForeignKey("ddf.AgentALanguage", "UnitAgentId", "ddf.UnitAgent", "UnitAgentId", cascadeDelete: true);
        }
    }
}
